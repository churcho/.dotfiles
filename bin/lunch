#! /usr/bin/env elixir

reject_carbs = fn
  list, true ->
    Enum.reject(list, & &1[:carbs])
  list, _ -> list
end

{opts, _, _} = OptionParser.parse(System.argv(), strict: [no_carbs: :boolean])

[
  %{
    name: "Punch Burger",
    carbs: false
  },
  %{
    name: "Yats",
    carbs: true
  },
  %{
    name: "Chipotle",
    carbs: false
  },
  %{
    name: "Fat Dan's",
    carbs: false
  },
  %{
    name: "Sun King",
    carbs: false
  },
  %{
    name: "Kroger",
    carbs: false
  },
  %{
    name: "HotBox",
    carbs: true
  },
  %{
    name: "Fork 'n' Ale",
    carbs: false
  },
  %{
    name: "Cancun",
    carbs: false
  },
  %{
    name: "Bubs",
    carbs: false
  },
  %{
    name: "Bazbeaux",
    carbs: true
  },
  %{
    name: "Adel's",
    carbs: false
  },
  %{
    name: "Mellow Mushroom",
    carbs: true
  },
  %{
    name: "Penn Station",
    carbs: false
  }
]
|> reject_carbs.(opts[:no_carbs])
|> Enum.random()
|> Map.fetch!(:name)
|> IO.puts()
