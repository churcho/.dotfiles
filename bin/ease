#!/usr/bin/env elixir

histfile = List.first(System.argv)
how_many = Enum.at(System.argv, 1) 

take = fn enum ->
  case how_many do
    nil ->
      enum
    _ -> 
      enum |> Enum.reverse |> Enum.take(String.to_integer(how_many))
  end
end

histfile
|> File.stream!([:read])
|> Stream.map(fn(line) ->
  line
  |> String.replace(~r/: .*:0;/, "") 
  |> String.trim
end)
|> Stream.filter(fn command -> String.length(command) > 4 end)
|> take.()
|> Enum.reduce(Map.new, &(Map.update(&2, &1, 1, fn(v) -> v + 1 end)))
|> Map.to_list
|> Enum.sort(fn({_, a}, {_, b}) -> a >= b end)
|> Enum.take(50)
|> Enum.map(fn ({name, count}) -> IO.puts("#{count} --- #{name}") end)
